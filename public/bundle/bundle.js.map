{"version":3,"sources":["js/components/Navbar.js","js/components/helpers.js","js/components/MostViewedTags.js","js/components/init.js","js/script.js","bundle.js"],"names":["htmlClassName","mobileButtonClassName","singleton","Navbar","navbar","classList","toggle","mobileButton","querySelector","addEventListener","toggleMenu","_initSingleton","message","console","log","navbarElement","document","err","_logError","getSingleton","Helpers","data","callbacks","_fillRequestParameters","httpRequest","XMLHttpRequest","onStart","isSuccessful","onSuccess","onFailure","onEnd","contentType","setRequestHeader","open","method","url","send","params","callbackName","MostViewedTags","mostViewedTagsDiv","status","json","JSON","parse","responseText","logError","_insertMessage","tagsHTML","item","link","tag","_insertContent","firstChild","removeChild","content","mustEmpty","_emptyDiv","insertAdjacentHTML","messageHTML","loadingHTML","_insertLoadingMessage","request","_isSuccessful","_onSuccess","_onFailure","mostViewedTagsDivs","getElementsByClassName","i","initAll"],"mappings":"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","file":"bundle.js","sourceRoot":"..\\..\\src","sourcesContent":["const htmlClassName = 'js-navbar';\r\nconst mobileButtonClassName = 'js-mobile-button';\r\n\r\nvar singleton = null;\r\n\r\nclass Navbar {\r\n    constructor(navbar) {\r\n        this.navbar = navbar;\r\n\r\n        this.mobileButton = this.navbar.querySelector(`.${mobileButtonClassName}`);\r\n        if (!this.mobileButton)\r\n            throw 'Mobile button not found...';\r\n        \r\n        this.mobileButton.addEventListener('click', this.toggleMenu);\r\n    }\r\n\r\n\r\n\r\n    toggleMenu = () => {\r\n        this.navbar.classList.toggle('open');\r\n    };\r\n\r\n    \r\n    \r\n    static getSingleton() {\r\n        if (!singleton)\r\n            Navbar._initSingleton();\r\n\r\n        return singleton;\r\n    }\r\n\r\n    static _logError(message) {\r\n        console.log(`Navbar: ${message}`);\r\n    }\r\n\r\n    static _initSingleton() {\r\n        const navbarElement = document.querySelector(`.${htmlClassName}`);\r\n        if (!navbarElement)\r\n            return;\r\n        \r\n        try {\r\n            singleton = new Navbar(navbarElement);\r\n        }\r\n        catch (err) {\r\n            Navbar._logError(err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => Navbar.getSingleton());","export default class Helpers {\r\n    \r\n    constructor() {\r\n        throw 'Static Only';\r\n    }\r\n\r\n\r\n\r\n    static request(data, callbacks={}) {\r\n        Helpers._fillRequestParameters(data, callbacks);\r\n\r\n        const httpRequest = new XMLHttpRequest();\r\n        \r\n        httpRequest.addEventListener('load', () => {\r\n            callbacks.onStart(httpRequest);\r\n\r\n            if (callbacks.isSuccessful(httpRequest))\r\n                callbacks.onSuccess(httpRequest);\r\n            else\r\n                callbacks.onFailure(httpRequest);\r\n            \r\n            callbacks.onEnd(httpRequest);\r\n        });\r\n\r\n        if (data.contentType)\r\n            httpRequest.setRequestHeader('Content-type', data.contentType);\r\n\r\n        httpRequest.open(data.method, data.url);\r\n        httpRequest.send(data.params);\r\n    }\r\n\r\n    static _fillRequestParameters(data, callbacks) {\r\n        if (!data.url)\r\n            throw 'URL must be provided...';\r\n        if (!data.method)\r\n            data.method = 'get';\r\n        if (!data.params)\r\n            data.params = '';\r\n        \r\n        if (!callbacks.isSuccessful || typeof callbacks.isSuccessful !== 'function')\r\n            callbacks.isSuccessful = () => true;\r\n\r\n        for (const callbackName of ['onStart', 'onSuccess', 'onFailure', 'onEnd'])\r\n            if (!callbacks[callbackName] || typeof callbacks[callbackName] !== 'function')\r\n                callbacks[callbackName] = () => {};\r\n    }\r\n}","import Helpers from './helpers';\r\n\r\nconst htmlClassName = 'js-most-viewed-tags';\r\nconst url = 'https://labs.inforcedata.com.br/desafio-frontend/cloudtags.json';\r\n\r\nclass MostViewedTags {    \r\n    constructor(mostViewedTagsDiv) {\r\n        this.mostViewedTagsDiv = mostViewedTagsDiv;\r\n\r\n        this._insertLoadingMessage();\r\n\r\n        Helpers.request(\r\n            {\r\n                url: url,\r\n                method: 'get'\r\n            },\r\n            {\r\n                isSuccessful: this._isSuccessful,\r\n                onSuccess: this._onSuccess,\r\n                onFailure: this._onFailure\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    _isSuccessful = (httpRequest) => {\r\n        return (httpRequest.status === 200);\r\n    }\r\n\r\n    _onSuccess = (httpRequest) => {\r\n        try {\r\n            var json = JSON.parse(httpRequest.responseText);\r\n        }\r\n        catch (err) {\r\n            MostViewedTags.logError('Could not read JSON...');\r\n            this._insertMessage('Erro ao ler informação...');\r\n            return;\r\n        }   \r\n\r\n        var tagsHTML = '';\r\n        for (const item of json)\r\n            tagsHTML += `<a href=\"${item.link}\" class=\"tag\">${item.tag}</a>`;\r\n        \r\n        if (tagsHTML === '')\r\n            return this._insertMessage('No tags found...');\r\n        \r\n        this._insertContent(tagsHTML);\r\n    }\r\n\r\n    _onFailure = () => {\r\n        this._insertMessage('Não foi possível carregar tags...');\r\n    }\r\n\r\n\r\n\r\n    _emptyDiv = () => {\r\n        while (this.mostViewedTagsDiv.firstChild)\r\n            this.mostViewedTagsDiv.removeChild(this.mostViewedTagsDiv.firstChild);\r\n    }\r\n\r\n    _insertContent = (content, mustEmpty=true) => {\r\n        if (mustEmpty)\r\n            this._emptyDiv();\r\n\r\n        this.mostViewedTagsDiv.insertAdjacentHTML('beforeend', content);\r\n    }\r\n\r\n\r\n\r\n    _insertMessage = (message, mustEmpty=true) => {\r\n        const messageHTML = `<div class=\"message\">${message}</div>`;\r\n        this._insertContent(messageHTML, mustEmpty);\r\n    }\r\n\r\n\r\n\r\n    _insertLoadingMessage = () => {\r\n        const loadingHTML = '<img src=\"images/icons/loading.gif\" alt=\"Loading...\">';\r\n        this._insertMessage(loadingHTML);\r\n    }\r\n\r\n\r\n\r\n    static logError(message) {\r\n        console.log(`MostViewedTags: ${message}`);\r\n    }\r\n\r\n\r\n\r\n    static initAll() {\r\n        const mostViewedTagsDivs = document.getElementsByClassName(htmlClassName);\r\n\r\n        var i = 0;\r\n        for (const mostViewedTagsDiv of mostViewedTagsDivs) {\r\n            try {\r\n                new MostViewedTags(mostViewedTagsDiv);\r\n            }\r\n            catch (err) {\r\n                MostViewedTags.logError(`#${i}: ${err}`);\r\n            }\r\n\r\n            i++;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => MostViewedTags.initAll());","import './Navbar';\r\nimport './MostViewedTags';","import components from './components/init';","import './css/style.css';\r\nimport './js/script';"]}