{"version":3,"sources":["js/components/helpers.js","js/components/MostViewedTags.js","js/components/init.js","js/script.js","bundle.js"],"names":["Helpers","data","callbacks","_fillRequestParameters","httpRequest","XMLHttpRequest","addEventListener","onStart","isSuccessful","onSuccess","onFailure","onEnd","contentType","setRequestHeader","open","method","url","send","params","callbackName","htmlClassName","MostViewedTags","mostViewedTagsDiv","status","json","JSON","parse","responseText","err","logError","_insertMessage","tagsHTML","item","link","tag","_insertContent","firstChild","removeChild","content","mustEmpty","_emptyDiv","insertAdjacentHTML","message","messageHTML","loadingHTML","_insertLoadingMessage","request","_isSuccessful","_onSuccess","_onFailure","console","log","mostViewedTagsDivs","document","getElementsByClassName","i","initAll"],"mappings":"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","file":"bundle.js","sourceRoot":"..\\..\\src","sourcesContent":["export default class Helpers {\r\n    \r\n    constructor() {\r\n        throw 'Static Only';\r\n    }\r\n\r\n\r\n\r\n    static request(data, callbacks={}) {\r\n        Helpers._fillRequestParameters(data, callbacks);\r\n\r\n        const httpRequest = new XMLHttpRequest();\r\n        \r\n        httpRequest.addEventListener('load', () => {\r\n            callbacks.onStart(httpRequest);\r\n\r\n            if (callbacks.isSuccessful(httpRequest))\r\n                callbacks.onSuccess(httpRequest);\r\n            else\r\n                callbacks.onFailure(httpRequest);\r\n            \r\n            callbacks.onEnd(httpRequest);\r\n        });\r\n\r\n        if (data.contentType)\r\n            httpRequest.setRequestHeader('Content-type', data.contentType);\r\n\r\n        httpRequest.open(data.method, data.url);\r\n        httpRequest.send(data.params);\r\n    }\r\n\r\n    static _fillRequestParameters(data, callbacks) {\r\n        if (!data.url)\r\n            throw 'URL must be provided...';\r\n        if (!data.method)\r\n            data.method = 'get';\r\n        if (!data.params)\r\n            data.params = '';\r\n        \r\n        if (!callbacks.isSuccessful || typeof callbacks.isSuccessful !== 'function')\r\n            callbacks.isSuccessful = () => true;\r\n\r\n        for (const callbackName of ['onStart', 'onSuccess', 'onFailure', 'onEnd'])\r\n            if (!callbacks[callbackName] || typeof callbacks[callbackName] !== 'function')\r\n                callbacks[callbackName] = () => {};\r\n    }\r\n}","import Helpers from './helpers';\r\n\r\nconst htmlClassName = 'js-most-viewed-tags';\r\nconst url = 'https://labs.inforcedata.com.br/desafio-frontend/cloudtags.json';\r\n\r\nclass MostViewedTags {    \r\n    constructor(mostViewedTagsDiv) {\r\n        this.mostViewedTagsDiv = mostViewedTagsDiv;\r\n\r\n        this._insertLoadingMessage();\r\n\r\n        Helpers.request(\r\n            {\r\n                url: url,\r\n                method: 'get'\r\n            },\r\n            {\r\n                isSuccessful: this._isSuccessful,\r\n                onSuccess: this._onSuccess,\r\n                onFailure: this._onFailure\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    _isSuccessful = (httpRequest) => {\r\n        return (httpRequest.status === 200);\r\n    }\r\n\r\n    _onSuccess = (httpRequest) => {\r\n        try {\r\n            var json = JSON.parse(httpRequest.responseText);\r\n        }\r\n        catch (err) {\r\n            MostViewedTags.logError('Could not read JSON...');\r\n            this._insertMessage('Erro ao ler informação...');\r\n            return;\r\n        }   \r\n\r\n        var tagsHTML = '';\r\n        for (const item of json)\r\n            tagsHTML += `<a href=\"${item.link}\" class=\"tag\">${item.tag}</a>`;\r\n        \r\n        if (tagsHTML === '')\r\n            return this._insertMessage('No tags found...');\r\n        \r\n        this._insertContent(tagsHTML);\r\n    }\r\n\r\n    _onFailure = () => {\r\n        this._insertMessage('Não foi possível carregar tags...');\r\n    }\r\n\r\n\r\n\r\n    _emptyDiv = () => {\r\n        while (this.mostViewedTagsDiv.firstChild)\r\n            this.mostViewedTagsDiv.removeChild(this.mostViewedTagsDiv.firstChild);\r\n    }\r\n\r\n    _insertContent = (content, mustEmpty=true) => {\r\n        if (mustEmpty)\r\n            this._emptyDiv();\r\n\r\n        this.mostViewedTagsDiv.insertAdjacentHTML('beforeend', content);\r\n    }\r\n\r\n\r\n\r\n    _insertMessage = (message, mustEmpty=true) => {\r\n        const messageHTML = `<div class=\"message\">${message}</div>`;\r\n        this._insertContent(messageHTML, mustEmpty);\r\n    }\r\n\r\n\r\n\r\n    _insertLoadingMessage = () => {\r\n        const loadingHTML = '<img src=\"images/icons/loading.gif\" alt=\"Loading...\">';\r\n        this._insertMessage(loadingHTML);\r\n    }\r\n\r\n\r\n\r\n    static logError(message) {\r\n        console.log(`MostViewedTags: ${message}`);\r\n    }\r\n\r\n\r\n\r\n    static initAll() {\r\n        const mostViewedTagsDivs = document.getElementsByClassName(htmlClassName);\r\n\r\n        var i = 0;\r\n        for (const mostViewedTagsDiv of mostViewedTagsDivs) {\r\n            try {\r\n                new MostViewedTags(mostViewedTagsDiv);\r\n            }\r\n            catch (err) {\r\n                MostViewedTags.logError(`#${i}: ${err}`);\r\n            }\r\n\r\n            i++;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => MostViewedTags.initAll());","import './MostViewedTags';","import components from './components/init';","import './css/style.css';\r\nimport './js/script';"]}